/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/utils/requirements_utils.py:20: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources  # noqa: TID251
2025-09-23 22:35:56,480 [DEBUG] dealmonitor: Backend Logging initialized.
Accessing as kasparrobert
Initialized MLflow to track repo "kasparrobert/dealmonitor_ml"
Repository kasparrobert/dealmonitor_ml initialized!
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/base.py:484: FutureWarning: `BaseEstimator._check_n_features` is deprecated in 1.6 and will be removed in 1.7. Use `sklearn.utils.validation._check_n_features` instead.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/base.py:493: FutureWarning: `BaseEstimator._check_feature_names` is deprecated in 1.6 and will be removed in 1.7. Use `sklearn.utils.validation._check_feature_names` instead.
  warnings.warn(
Tuning mlp:   0%|          | 0/540 [00:00<?, ?it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   0%|          | 1/540 [10:00<89:53:26, 600.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   0%|          | 2/540 [20:03<89:55:18, 601.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|          | 3/540 [30:00<89:26:15, 599.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|          | 4/540 [40:15<90:13:26, 605.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|          | 5/540 [50:00<88:54:34, 598.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|          | 6/540 [59:43<87:57:36, 592.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|▏         | 7/540 [1:01:53<65:23:47, 441.70s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   1%|▏         | 8/540 [1:04:16<51:12:45, 346.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   2%|▏         | 9/540 [1:06:48<42:08:14, 285.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   2%|▏         | 10/540 [1:09:02<35:10:54, 238.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   2%|▏         | 11/540 [1:11:27<30:53:09, 210.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   2%|▏         | 12/540 [1:13:46<27:39:36, 188.59s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   2%|▏         | 13/540 [1:28:03<57:15:16, 391.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   3%|▎         | 14/540 [1:39:32<70:16:25, 480.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   3%|▎         | 15/540 [1:53:43<86:24:53, 592.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   3%|▎         | 16/540 [2:05:06<90:12:01, 619.70s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   3%|▎         | 17/540 [2:19:46<101:23:35, 697.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   3%|▎         | 18/540 [2:31:18<100:58:55, 696.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▎         | 19/540 [2:35:25<81:12:53, 561.18s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▎         | 20/540 [2:40:43<70:30:54, 488.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▍         | 21/540 [2:45:20<61:15:49, 424.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▍         | 22/540 [2:51:10<57:55:17, 402.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▍         | 23/540 [2:55:21<51:16:06, 356.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   4%|▍         | 24/540 [3:01:28<51:35:11, 359.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   5%|▍         | 25/540 [3:17:18<76:48:07, 536.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   5%|▍         | 26/540 [3:34:18<97:22:24, 681.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   5%|▌         | 27/540 [3:49:52<107:57:44, 757.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   5%|▌         | 28/540 [4:07:02<119:21:29, 839.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   5%|▌         | 29/540 [4:22:38<123:14:52, 868.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▌         | 30/540 [4:40:17<131:06:05, 925.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▌         | 31/540 [4:47:44<110:34:36, 782.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▌         | 32/540 [5:00:51<110:33:42, 783.51s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▌         | 33/540 [5:08:23<96:20:31, 684.09s/it] ✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.435
▶ Accuracy: 0.802
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.435
▶ Accuracy: 0.802
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.435
▶ Accuracy: 0.802
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.826
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.387
▶ Accuracy: 0.740
▶ F1 Score: 0.724
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.826
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.387
▶ Accuracy: 0.740
▶ F1 Score: 0.724
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.826
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.387
▶ Accuracy: 0.740
▶ F1 Score: 0.724
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.867
▶ F1 Score: 0.861
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.766
▶ F1 Score: 0.738
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.867
▶ F1 Score: 0.861
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.766
▶ F1 Score: 0.738
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.867
▶ F1 Score: 0.861
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.766
▶ F1 Score: 0.738
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.872
▶ F1 Score: 0.870
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.850
▶ F1 Score: 0.841
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.872
▶ F1 Score: 0.870
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.850
▶ F1 Score: 0.841
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.872
▶ F1 Score: 0.870
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.850
▶ F1 Score: 0.841
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.856
▶ F1 Score: 0.857
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.791
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.856
▶ F1 Score: 0.857
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.791
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.856
▶ F1 Score: 0.857
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.791
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.874
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.832
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.874
▶ F1 Score: 0.873
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▋         | 34/540 [5:21:57<101:37:17, 723.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   6%|▋         | 35/540 [5:29:40<90:29:44, 645.12s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   7%|▋         | 36/540 [5:42:28<95:28:35, 681.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   7%|▋         | 37/540 [5:53:50<95:15:55, 681.82s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   7%|▋         | 38/540 [6:12:06<112:23:09, 805.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   7%|▋         | 39/540 [6:23:25<106:53:15, 768.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   7%|▋         | 40/540 [6:41:29<119:49:58, 862.80s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   8%|▊         | 41/540 [6:52:50<112:01:00, 808.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   8%|▊         | 42/540 [7:11:21<124:22:29, 899.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   8%|▊         | 43/540 [7:18:45<105:17:47, 762.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   8%|▊         | 44/540 [7:33:48<110:51:39, 804.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   8%|▊         | 45/540 [7:40:56<95:06:17, 691.67s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▊         | 46/540 [7:56:35<105:06:38, 765.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▊         | 47/540 [8:05:05<94:22:31, 689.15s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▉         | 48/540 [8:21:12<105:32:59, 772.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▉         | 49/540 [8:45:43<133:55:40, 981.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▉         | 50/540 [9:13:11<160:51:34, 1181.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:   9%|▉         | 51/540 [9:37:07<170:52:49, 1258.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  10%|▉         | 52/540 [10:03:04<182:42:58, 1347.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  10%|▉         | 53/540 [10:26:34<184:51:13, 1366.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  10%|█         | 54/540 [10:52:38<192:27:06, 1425.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  10%|█         | 55/540 [11:03:58<161:56:35, 1202.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  10%|█         | 56/540 [11:26:17<167:07:57, 1243.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█         | 57/540 [11:37:46<144:29:39, 1076.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█         | 58/540 [11:59:54<154:15:07, 1152.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█         | 59/540 [12:10:56<134:17:38, 1005.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█         | 60/540 [12:33:44<148:31:30, 1113.94s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█▏        | 61/540 [12:45:49<132:42:54, 997.44s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  11%|█▏        | 62/540 [12:55:22<115:31:00, 870.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  12%|█▏        | 63/540 [13:07:36<109:52:12, 829.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  12%|█▏        | 64/540 [13:16:58<99:02:39, 749.08s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  12%|█▏        | 65/540 [13:28:35<96:46:43, 733.48s/it]✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.832
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.874
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.832
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.891
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.847
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.891
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.847
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.891
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.847
▶ F1 Score: 0.837
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.885
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.885
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.885
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.845
▶ F1 Score: 0.832
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.778
▶ F1 Score: 0.742
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.845
▶ F1 Score: 0.832
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.778
▶ F1 Score: 0.742
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.845
▶ F1 Score: 0.832
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.778
▶ F1 Score: 0.742
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.847
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.847
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.847
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.792
▶ F1 Score: 0.797
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.784
▶ F1 Score: 0.786
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.792
▶ F1 Score: 0.797
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.784
▶ F1 Score: 0.786
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.792
▶ F1 Score: 0.797
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  12%|█▏        | 66/540 [13:38:11<90:21:24, 686.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  12%|█▏        | 67/540 [13:40:45<69:10:49, 526.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  13%|█▎        | 68/540 [13:43:04<53:46:51, 410.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  13%|█▎        | 69/540 [13:45:52<44:08:57, 337.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  13%|█▎        | 70/540 [13:48:22<36:43:17, 281.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  13%|█▎        | 71/540 [13:51:13<32:19:54, 248.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  13%|█▎        | 72/540 [13:53:28<27:51:22, 214.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▎        | 73/540 [14:06:46<50:31:20, 389.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▎        | 74/540 [14:20:35<67:28:59, 521.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▍        | 75/540 [14:33:14<76:32:39, 592.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▍        | 76/540 [14:46:52<85:06:40, 660.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▍        | 77/540 [15:00:02<89:55:06, 699.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  14%|█▍        | 78/540 [15:13:40<94:16:54, 734.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  15%|█▍        | 79/540 [15:20:09<80:48:29, 631.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  15%|█▍        | 80/540 [15:25:21<68:25:07, 535.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  15%|█▌        | 81/540 [15:31:45<62:28:52, 490.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  15%|█▌        | 82/540 [15:36:56<55:30:20, 436.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  15%|█▌        | 83/540 [15:43:19<53:21:37, 420.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▌        | 84/540 [15:48:33<49:11:20, 388.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▌        | 85/540 [15:58:56<57:58:42, 458.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▌        | 86/540 [16:21:07<90:50:22, 720.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▌        | 87/540 [16:31:13<86:19:06, 685.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▋        | 88/540 [16:53:34<110:48:44, 882.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  16%|█▋        | 89/540 [17:03:50<100:32:47, 802.59s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  17%|█▋        | 90/540 [17:25:59<120:04:39, 960.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  17%|█▋        | 91/540 [17:32:54<99:23:06, 796.85s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  17%|█▋        | 92/540 [17:40:46<87:02:06, 699.39s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  17%|█▋        | 93/540 [17:47:50<76:36:06, 616.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  17%|█▋        | 94/540 [17:55:39<70:56:01, 572.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  18%|█▊        | 95/540 [18:02:22<64:28:50, 521.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  18%|█▊        | 96/540 [18:10:00<61:58:22, 502.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  18%|█▊        | 97/540 [18:22:02<69:54:59, 568.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  18%|█▊        | 98/540 [18:39:34<87:35:25, 713.41s/it]✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.784
▶ F1 Score: 0.786
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.815
▶ F1 Score: 0.815
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.403
▶ Accuracy: 0.743
▶ F1 Score: 0.723
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.815
▶ F1 Score: 0.815
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.403
▶ Accuracy: 0.743
▶ F1 Score: 0.723
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.815
▶ F1 Score: 0.815
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.403
▶ Accuracy: 0.743
▶ F1 Score: 0.723
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.861
▶ F1 Score: 0.855
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.812
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.861
▶ F1 Score: 0.855
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.812
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.861
▶ F1 Score: 0.855
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.812
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.879
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.770
▶ F1 Score: 0.739
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.879
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.770
▶ F1 Score: 0.739
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.879
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.770
▶ F1 Score: 0.739
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.854
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.875
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.854
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.875
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.854
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.875
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.833
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.825
▶ F1 Score: 0.823
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  18%|█▊        | 99/540 [18:51:28<87:25:58, 713.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▊        | 100/540 [19:08:57<99:30:18, 814.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▊        | 101/540 [19:21:21<96:44:12, 793.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▉        | 102/540 [19:38:46<105:41:55, 868.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▉        | 103/540 [19:46:05<89:48:03, 739.78s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▉        | 104/540 [20:01:07<95:29:31, 788.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  19%|█▉        | 105/540 [20:08:43<83:12:49, 688.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  20%|█▉        | 106/540 [20:23:33<90:18:33, 749.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  20%|█▉        | 107/540 [20:30:44<78:36:31, 653.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  20%|██        | 108/540 [20:46:09<88:12:02, 735.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  20%|██        | 109/540 [21:09:49<112:35:41, 940.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  20%|██        | 110/540 [21:35:04<132:55:08, 1112.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██        | 111/540 [21:59:11<144:34:45, 1213.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██        | 112/540 [22:23:58<153:59:06, 1295.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██        | 113/540 [22:49:00<160:59:05, 1357.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██        | 114/540 [23:14:47<167:22:04, 1414.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██▏       | 115/540 [23:24:29<137:30:02, 1164.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  21%|██▏       | 116/540 [23:45:48<141:12:26, 1198.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  22%|██▏       | 117/540 [23:54:51<117:45:33, 1002.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  22%|██▏       | 118/540 [24:15:11<125:06:56, 1067.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  22%|██▏       | 119/540 [24:23:54<105:43:19, 904.04s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  22%|██▏       | 120/540 [24:44:38<117:23:16, 1006.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  22%|██▏       | 121/540 [24:51:25<96:09:47, 826.22s/it]  /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  23%|██▎       | 122/540 [25:01:19<87:50:49, 756.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  23%|██▎       | 123/540 [25:09:07<77:36:47, 670.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  23%|██▎       | 124/540 [25:19:32<75:51:31, 656.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  23%|██▎       | 125/540 [25:27:17<69:04:52, 599.26s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  23%|██▎       | 126/540 [25:37:52<70:07:15, 609.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▎       | 127/540 [25:40:42<54:49:15, 477.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▎       | 128/540 [25:43:03<43:08:45, 377.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▍       | 129/540 [25:45:49<35:48:02, 313.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▍       | 130/540 [25:48:11<29:50:16, 261.99s/it]✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.833
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.825
▶ F1 Score: 0.823
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.833
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.825
▶ F1 Score: 0.823
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.900
▶ F1 Score: 0.894
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.898
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.900
▶ F1 Score: 0.894
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.898
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.900
▶ F1 Score: 0.894
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.898
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.887
▶ F1 Score: 0.884
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.828
▶ F1 Score: 0.823
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.887
▶ F1 Score: 0.884
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.828
▶ F1 Score: 0.823
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.887
▶ F1 Score: 0.884
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.828
▶ F1 Score: 0.823
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.892
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.827
▶ F1 Score: 0.812
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.892
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.827
▶ F1 Score: 0.812
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.892
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.827
▶ F1 Score: 0.812
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.800
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.800
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.800
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.781
▶ F1 Score: 0.788
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.835
▶ F1 Score: 0.834
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.740
▶ F1 Score: 0.721
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.835
▶ F1 Score: 0.834
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.740
▶ F1 Score: 0.721
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.835
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▍       | 131/540 [25:50:58<26:33:00, 233.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  24%|██▍       | 132/540 [25:53:19<23:20:11, 205.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  25%|██▍       | 133/540 [26:07:27<45:03:34, 398.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  25%|██▍       | 134/540 [26:20:38<58:13:02, 516.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  25%|██▌       | 135/540 [26:35:38<71:01:07, 631.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  25%|██▌       | 136/540 [26:48:33<75:41:08, 674.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  25%|██▌       | 137/540 [27:03:48<83:34:59, 746.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▌       | 138/540 [27:16:33<83:58:45, 752.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▌       | 139/540 [27:21:04<67:42:11, 607.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▌       | 140/540 [27:24:10<53:28:49, 481.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▌       | 141/540 [27:28:25<45:48:38, 413.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▋       | 142/540 [27:31:02<37:11:09, 336.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  26%|██▋       | 143/540 [27:35:10<34:10:42, 309.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  27%|██▋       | 144/540 [27:38:08<29:43:25, 270.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  27%|██▋       | 145/540 [27:47:30<39:15:54, 357.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  27%|██▋       | 146/540 [28:03:56<59:47:01, 546.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  27%|██▋       | 147/540 [28:13:00<59:34:28, 545.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  27%|██▋       | 148/540 [28:28:56<72:48:37, 668.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  28%|██▊       | 149/540 [28:38:09<68:51:16, 633.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  28%|██▊       | 150/540 [28:54:58<80:53:07, 746.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  28%|██▊       | 151/540 [29:03:03<72:12:09, 668.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  28%|██▊       | 152/540 [29:14:14<72:05:34, 668.90s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  28%|██▊       | 153/540 [29:22:38<66:34:45, 619.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▊       | 154/540 [29:33:55<68:16:14, 636.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▊       | 155/540 [29:42:04<63:21:18, 592.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▉       | 156/540 [29:53:07<65:27:54, 613.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▉       | 157/540 [30:06:06<70:33:43, 663.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▉       | 158/540 [30:24:33<84:28:59, 796.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  29%|██▉       | 159/540 [30:36:57<82:37:18, 780.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  30%|██▉       | 160/540 [30:55:29<92:53:25, 880.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  30%|██▉       | 161/540 [31:08:27<89:26:10, 849.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  30%|███       | 162/540 [31:26:46<97:02:48, 924.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  30%|███       | 163/540 [31:33:54<81:11:38, 775.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  30%|███       | 164/540 [31:47:13<81:43:50, 782.53s/it]▶ F1 Score: 0.834
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.740
▶ F1 Score: 0.721
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.807
▶ F1 Score: 0.801
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.807
▶ F1 Score: 0.801
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.807
▶ F1 Score: 0.801
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.836
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.808
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.836
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.808
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.836
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.808
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.798
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.798
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.798
▶ F1 Score: 0.808
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.852
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.850
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.852
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.850
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.852
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.850
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.824
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.840
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.824
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.840
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.824
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.840
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.884
▶ F1 Score: 0.880
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███       | 165/540 [31:53:43<69:14:42, 664.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███       | 166/540 [32:09:15<77:22:37, 744.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███       | 167/540 [32:16:41<67:54:14, 655.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███       | 168/540 [32:31:33<75:03:35, 726.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███▏      | 169/540 [32:58:32<102:26:58, 994.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  31%|███▏      | 170/540 [33:25:54<122:07:55, 1188.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  32%|███▏      | 171/540 [33:53:17<135:46:53, 1324.70s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  32%|███▏      | 172/540 [34:20:56<145:39:53, 1424.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  32%|███▏      | 173/540 [34:48:38<152:32:04, 1496.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  32%|███▏      | 174/540 [35:15:53<156:21:09, 1537.89s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  32%|███▏      | 175/540 [35:32:22<139:13:05, 1373.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  33%|███▎      | 176/540 [35:46:10<122:18:45, 1209.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  33%|███▎      | 177/540 [36:02:42<115:23:29, 1144.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  33%|███▎      | 178/540 [36:16:46<105:59:55, 1054.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  33%|███▎      | 179/540 [36:33:01<103:20:45, 1030.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  33%|███▎      | 180/540 [36:47:08<97:32:02, 975.34s/it]  /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▎      | 181/540 [36:59:07<89:36:10, 898.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▎      | 182/540 [37:15:48<92:24:32, 929.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▍      | 183/540 [37:27:26<85:16:33, 859.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▍      | 184/540 [37:43:28<88:04:02, 890.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▍      | 185/540 [37:55:33<82:54:53, 840.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  34%|███▍      | 186/540 [38:12:20<87:35:09, 890.70s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  35%|███▍      | 187/540 [38:23:12<80:18:19, 818.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  35%|███▍      | 188/540 [38:34:31<75:59:04, 777.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  35%|███▌      | 189/540 [38:45:29<72:16:04, 741.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  35%|███▌      | 190/540 [38:57:38<71:43:11, 737.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  35%|███▌      | 191/540 [39:08:54<69:42:58, 719.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▌      | 192/540 [39:19:58<67:55:08, 702.61s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▌      | 193/540 [40:01:16<119:03:14, 1235.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▌      | 194/540 [40:30:48<134:12:15, 1396.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▌      | 195/540 [41:11:46<164:19:53, 1714.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▋      | 196/540 [41:40:55<164:51:01, 1725.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  36%|███▋      | 197/540 [42:11:43<167:51:41, 1761.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.884
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.884
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.848
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.775
▶ F1 Score: 0.736
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.848
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.775
▶ F1 Score: 0.736
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.848
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.775
▶ F1 Score: 0.736
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.859
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.876
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.859
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.876
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.859
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'relu', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.876
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.808
▶ F1 Score: 0.794
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.808
▶ F1 Score: 0.794
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.808
▶ F1 Score: 0.794
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.876
▶ F1 Score: 0.871
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.870
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.876
▶ F1 Score: 0.871
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.870
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.876
▶ F1 Score: 0.871
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.870
▶ F1 Score: 0.866
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.839
▶ F1 Score: 0.824
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.839
▶ F1 Score: 0.824
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.841
▶ F1 Score: 0.826
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  37%|███▋      | 198/540 [42:39:55<165:24:10, 1741.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  37%|███▋      | 199/540 [42:48:42<130:24:35, 1376.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  37%|███▋      | 200/540 [43:14:18<134:31:53, 1424.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  37%|███▋      | 201/540 [43:22:22<107:34:52, 1142.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  37%|███▋      | 202/540 [43:46:56<116:36:30, 1241.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  38%|███▊      | 203/540 [43:55:10<95:15:31, 1017.60s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  38%|███▊      | 204/540 [44:19:32<107:23:41, 1150.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  38%|███▊      | 205/540 [45:24:43<184:08:49, 1978.89s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  38%|███▊      | 206/540 [46:18:59<219:08:51, 2362.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  38%|███▊      | 207/540 [47:24:28<261:57:35, 2832.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▊      | 208/540 [48:17:29<270:50:52, 2936.90s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▊      | 209/540 [49:09:31<275:07:16, 2992.26s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▉      | 210/540 [49:57:46<271:37:11, 2963.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▉      | 211/540 [50:08:35<207:20:26, 2268.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▉      | 212/540 [50:47:26<208:25:09, 2287.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  39%|███▉      | 213/540 [50:58:37<163:44:38, 1802.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  40%|███▉      | 214/540 [51:38:16<178:53:54, 1975.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  40%|███▉      | 215/540 [51:48:43<141:48:48, 1570.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  40%|████      | 216/540 [52:28:23<163:13:40, 1813.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  40%|████      | 217/540 [53:07:33<177:10:27, 1974.70s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  40%|████      | 218/540 [53:56:05<201:46:09, 2255.80s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████      | 219/540 [54:33:53<201:27:34, 2259.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████      | 220/540 [55:23:58<220:43:13, 2483.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████      | 221/540 [56:02:35<215:36:39, 2433.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████      | 222/540 [56:54:02<232:15:38, 2629.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████▏     | 223/540 [57:02:28<175:26:07, 1992.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  41%|████▏     | 224/540 [57:41:43<184:26:17, 2101.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  42%|████▏     | 225/540 [57:51:14<143:41:42, 1642.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  42%|████▏     | 226/540 [58:30:46<162:19:58, 1861.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  42%|████▏     | 227/540 [58:40:11<127:59:27, 1472.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  42%|████▏     | 228/540 [59:19:49<151:09:39, 1744.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  42%|████▏     | 229/540 [60:24:23<205:52:24, 2383.10s/it]✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.831
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.858
▶ F1 Score: 0.846
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.886
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.858
▶ F1 Score: 0.846
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.886
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.858
▶ F1 Score: 0.846
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.886
▶ F1 Score: 0.881
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.896
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.861
▶ F1 Score: 0.853
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.896
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.861
▶ F1 Score: 0.853
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.893
▶ F1 Score: 0.888
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.860
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.907
▶ F1 Score: 0.902
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.877
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.907
▶ F1 Score: 0.902
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.877
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.907
▶ F1 Score: 0.902
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.877
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  43%|████▎     | 230/540 [61:35:14<253:27:02, 2943.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  43%|████▎     | 231/540 [62:41:24<279:04:59, 3251.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  43%|████▎     | 232/540 [63:51:00<301:54:27, 3528.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  43%|████▎     | 233/540 [64:56:07<310:36:17, 3642.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  43%|████▎     | 234/540 [66:06:22<324:10:55, 3813.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▎     | 235/540 [66:20:17<247:25:25, 2920.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▎     | 236/540 [67:29:17<277:29:37, 3286.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▍     | 237/540 [67:43:07<214:34:29, 2549.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▍     | 238/540 [68:51:38<253:10:12, 3017.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▍     | 239/540 [69:04:48<196:26:43, 2349.51s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  44%|████▍     | 240/540 [70:13:43<240:24:53, 2884.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  45%|████▍     | 241/540 [70:28:33<189:55:30, 2286.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  45%|████▍     | 242/540 [70:45:02<157:03:45, 1897.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  45%|████▌     | 243/540 [71:00:07<131:57:28, 1599.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  45%|████▌     | 244/540 [71:16:36<116:28:24, 1416.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  45%|████▌     | 245/540 [71:30:54<102:19:34, 1248.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▌     | 246/540 [71:47:21<95:34:56, 1170.40s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▌     | 247/540 [71:56:43<80:23:27, 987.74s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▌     | 248/540 [72:06:29<70:21:26, 867.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▌     | 249/540 [72:15:39<62:23:59, 771.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▋     | 250/540 [72:26:22<59:04:14, 733.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  46%|████▋     | 251/540 [72:35:51<54:55:48, 684.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  47%|████▋     | 252/540 [72:46:19<53:23:18, 667.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  47%|████▋     | 253/540 [73:15:23<78:56:30, 990.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  47%|████▋     | 254/540 [73:41:48<92:51:14, 1168.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  47%|████▋     | 255/540 [74:11:10<106:36:42, 1346.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  47%|████▋     | 256/540 [74:39:20<114:21:12, 1449.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  48%|████▊     | 257/540 [75:07:46<120:00:18, 1526.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  48%|████▊     | 258/540 [75:35:27<122:43:56, 1566.80s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  48%|████▊     | 259/540 [75:44:24<98:11:56, 1258.07s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  48%|████▊     | 260/540 [76:09:48<104:02:28, 1337.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  48%|████▊     | 261/540 [76:19:38<86:16:52, 1113.31s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▊     | 262/540 [76:43:39<93:34:18, 1211.72s/it]▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.841
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.841
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.841
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.817
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.817
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.817
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.820
▶ F1 Score: 0.816
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.858
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.858
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.887
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.858
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.840
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.840
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.840
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.831
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.894
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.894
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▊     | 263/540 [76:53:08<78:23:48, 1018.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▉     | 264/540 [77:18:44<90:00:23, 1174.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▉     | 265/540 [78:07:30<129:49:35, 1699.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▉     | 266/540 [78:59:55<162:22:16, 2133.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  49%|████▉     | 267/540 [79:47:30<178:11:48, 2349.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  50%|████▉     | 268/540 [80:40:48<196:46:15, 2604.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  50%|████▉     | 269/540 [81:28:35<201:58:23, 2683.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  50%|█████     | 270/540 [82:16:03<204:56:08, 2732.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  50%|█████     | 271/540 [82:28:35<159:47:34, 2138.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  50%|█████     | 272/540 [83:07:52<164:03:50, 2203.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████     | 273/540 [83:20:51<131:45:01, 1776.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████     | 274/540 [83:58:26<141:52:52, 1920.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████     | 275/540 [84:11:21<116:03:30, 1576.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████     | 276/540 [84:49:10<130:50:46, 1784.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████▏    | 277/540 [85:27:13<141:16:23, 1933.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  51%|█████▏    | 278/540 [86:15:33<161:49:29, 2223.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  52%|█████▏    | 279/540 [86:52:38<161:15:05, 2224.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  52%|█████▏    | 280/540 [87:43:19<178:19:59, 2469.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  52%|█████▏    | 281/540 [88:20:37<172:38:34, 2399.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  52%|█████▏    | 282/540 [89:11:03<185:27:22, 2587.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  52%|█████▏    | 283/540 [89:19:08<139:41:56, 1956.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  53%|█████▎    | 284/540 [89:55:45<144:17:07, 2029.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  53%|█████▎    | 285/540 [90:04:15<111:26:28, 1573.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  53%|█████▎    | 286/540 [90:39:29<122:26:06, 1735.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  53%|█████▎    | 287/540 [90:47:45<95:49:34, 1363.54s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  53%|█████▎    | 288/540 [91:24:54<113:37:37, 1623.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▎    | 289/540 [92:27:56<158:20:28, 2271.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▎    | 290/540 [93:28:48<186:28:10, 2685.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▍    | 291/540 [94:31:25<207:57:23, 3006.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▍    | 292/540 [95:31:55<220:00:48, 3193.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▍    | 293/540 [96:33:47<229:47:57, 3349.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  54%|█████▍    | 294/540 [97:34:03<234:20:04, 3429.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  55%|█████▍    | 295/540 [97:48:50<181:28:10, 2666.49s/it]▶ Accuracy: 0.894
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.897
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.861
▶ F1 Score: 0.853
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.897
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.861
▶ F1 Score: 0.853
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.897
▶ F1 Score: 0.892
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.860
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.878
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.878
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.878
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.834
▶ F1 Score: 0.820
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.862
▶ F1 Score: 0.859
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.765
▶ F1 Score: 0.761
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.765
▶ F1 Score: 0.761
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.889
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.765
▶ F1 Score: 0.761
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.844
▶ F1 Score: 0.827
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  55%|█████▍    | 296/540 [98:55:43<208:06:41, 3070.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  55%|█████▌    | 297/540 [99:10:06<162:34:02, 2408.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  55%|█████▌    | 298/540 [100:14:51<191:40:14, 2851.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  55%|█████▌    | 299/540 [100:29:54<151:44:39, 2266.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▌    | 300/540 [101:35:53<184:57:33, 2774.39s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▌    | 301/540 [101:47:31<142:50:26, 2151.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▌    | 302/540 [102:03:26<118:30:14, 1792.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▌    | 303/540 [102:14:32<95:45:26, 1454.54s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▋    | 304/540 [102:30:23<85:27:10, 1303.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  56%|█████▋    | 305/540 [102:42:09<73:23:35, 1124.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  57%|█████▋    | 306/540 [102:58:21<70:06:39, 1078.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  57%|█████▋    | 307/540 [103:08:37<60:49:38, 939.82s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  57%|█████▋    | 308/540 [103:17:45<52:59:05, 822.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  57%|█████▋    | 309/540 [103:28:09<48:56:58, 762.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  57%|█████▋    | 310/540 [103:38:45<46:17:46, 724.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  58%|█████▊    | 311/540 [103:49:20<44:23:32, 697.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  58%|█████▊    | 312/540 [103:59:34<42:36:42, 672.82s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  58%|█████▊    | 313/540 [104:24:19<57:47:23, 916.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  58%|█████▊    | 314/540 [104:51:59<71:31:16, 1139.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  58%|█████▊    | 315/540 [105:16:08<77:01:33, 1232.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▊    | 316/540 [105:45:13<86:14:58, 1386.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▊    | 317/540 [106:10:43<88:31:32, 1429.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▉    | 318/540 [106:39:55<94:06:44, 1526.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▉    | 319/540 [106:51:06<77:56:11, 1269.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▉    | 320/540 [107:03:48<68:16:38, 1117.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  59%|█████▉    | 321/540 [107:14:44<59:33:34, 979.06s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  60%|█████▉    | 322/540 [107:26:30<54:19:17, 897.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  60%|█████▉    | 323/540 [107:37:16<49:31:57, 821.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  60%|██████    | 324/540 [107:49:29<47:42:15, 795.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  60%|██████    | 325/540 [108:38:56<86:23:49, 1446.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  60%|██████    | 326/540 [109:34:34<119:43:42, 2014.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████    | 327/540 [110:23:36<135:38:17, 2292.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████    | 328/540 [111:18:50<153:02:13, 2598.74s/it]✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.844
▶ F1 Score: 0.827
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.844
▶ F1 Score: 0.827
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.860
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.848
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.809
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.848
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.809
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.850
▶ F1 Score: 0.848
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.809
▶ F1 Score: 0.800
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.865
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.865
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.865
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.842
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.830
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.842
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.830
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.842
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.828
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.870
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.870
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.870
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.883
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.852
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.883
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.852
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████    | 329/540 [112:08:23<158:53:52, 2711.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████    | 330/540 [112:58:34<163:24:18, 2801.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████▏   | 331/540 [113:12:31<128:24:42, 2211.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  61%|██████▏   | 332/540 [113:47:09<125:28:30, 2171.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  62%|██████▏   | 333/540 [114:00:55<101:39:10, 1767.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  62%|██████▏   | 334/540 [114:34:35<105:29:50, 1843.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  62%|██████▏   | 335/540 [114:48:39<87:54:29, 1543.75s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  62%|██████▏   | 336/540 [115:22:59<96:15:07, 1698.57s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  62%|██████▏   | 337/540 [116:03:30<108:10:31, 1918.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  63%|██████▎   | 338/540 [116:55:05<127:26:58, 2271.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  63%|██████▎   | 339/540 [117:35:37<129:30:03, 2319.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  63%|██████▎   | 340/540 [118:28:46<143:21:29, 2580.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  63%|██████▎   | 341/540 [119:08:15<139:08:10, 2517.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  63%|██████▎   | 342/540 [120:00:56<149:03:42, 2710.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▎   | 343/540 [120:09:56<112:40:16, 2058.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▎   | 344/540 [120:45:44<113:33:39, 2085.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▍   | 345/540 [120:54:40<87:47:39, 1620.82s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▍   | 346/540 [121:30:28<95:52:03, 1778.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▍   | 347/540 [121:39:29<75:27:18, 1407.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  64%|██████▍   | 348/540 [122:16:47<88:21:54, 1656.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  65%|██████▍   | 349/540 [123:28:50<130:20:03, 2456.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  65%|██████▍   | 350/540 [124:37:10<155:40:15, 2949.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  65%|██████▌   | 351/540 [125:49:34<176:48:46, 3367.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  65%|██████▌   | 352/540 [126:56:45<186:16:47, 3567.06s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  65%|██████▌   | 353/540 [128:10:14<198:23:46, 3819.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▌   | 354/540 [129:17:59<201:08:40, 3893.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▌   | 355/540 [129:38:29<159:00:44, 3094.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▌   | 356/540 [130:45:54<172:43:41, 3379.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▌   | 357/540 [131:05:07<137:50:11, 2711.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▋   | 358/540 [132:13:44<158:23:53, 3133.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  66%|██████▋   | 359/540 [132:33:36<128:14:51, 2550.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  67%|██████▋   | 360/540 [133:41:41<150:33:00, 3011.00s/it]✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.883
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.860
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.852
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.873
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.852
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.873
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.852
▶ F1 Score: 0.839
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.873
▶ F1 Score: 0.872
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.886
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.886
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.886
▶ F1 Score: 0.880
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.896
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.877
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.896
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.877
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.896
▶ F1 Score: 0.891
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.877
▶ F1 Score: 0.874
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.858
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.838
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.858
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.838
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.858
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.838
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.842
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.842
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'tanh', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.842
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  67%|██████▋   | 361/540 [133:53:30<115:23:06, 2320.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  67%|██████▋   | 362/540 [134:00:08<86:12:51, 1743.66s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  67%|██████▋   | 363/540 [134:11:38<70:10:59, 1427.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  67%|██████▋   | 364/540 [134:18:04<54:30:58, 1115.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  68%|██████▊   | 365/540 [134:29:13<47:42:24, 981.40s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  68%|██████▊   | 366/540 [134:35:45<38:53:12, 804.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  68%|██████▊   | 367/540 [134:50:06<39:28:25, 821.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  68%|██████▊   | 368/540 [135:05:08<40:24:13, 845.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  68%|██████▊   | 369/540 [135:18:57<39:56:08, 840.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▊   | 370/540 [135:33:58<40:32:53, 858.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▊   | 371/540 [135:48:21<40:22:17, 859.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▉   | 372/540 [136:03:02<40:25:44, 866.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▉   | 373/540 [136:27:31<48:34:29, 1047.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▉   | 374/540 [136:42:14<46:00:22, 997.73s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  69%|██████▉   | 375/540 [137:05:23<51:07:09, 1115.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  70%|██████▉   | 376/540 [137:20:09<47:40:26, 1046.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  70%|██████▉   | 377/540 [137:42:25<51:18:39, 1133.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  70%|███████   | 378/540 [137:56:35<47:10:32, 1048.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  70%|███████   | 379/540 [138:17:11<49:24:13, 1104.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  70%|███████   | 380/540 [138:31:57<46:10:49, 1039.06s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████   | 381/540 [138:54:28<50:01:44, 1132.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████   | 382/540 [139:10:06<47:08:48, 1074.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████   | 383/540 [139:32:04<50:02:01, 1147.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████   | 384/540 [139:47:55<47:10:11, 1088.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████▏  | 385/540 [140:21:31<58:50:27, 1366.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  71%|███████▏  | 386/540 [140:42:15<56:53:43, 1330.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  72%|███████▏  | 387/540 [141:16:11<65:30:58, 1541.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  72%|███████▏  | 388/540 [141:38:36<62:36:27, 1482.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  72%|███████▏  | 389/540 [142:11:36<68:26:55, 1631.89s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  72%|███████▏  | 390/540 [142:31:18<62:21:58, 1496.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  72%|███████▏  | 391/540 [143:03:03<67:01:37, 1619.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  73%|███████▎  | 392/540 [143:33:42<69:16:33, 1685.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  73%|███████▎  | 393/540 [144:06:09<72:01:22, 1763.83s/it]▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.808
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.808
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.808
▶ F1 Score: 0.806
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.842
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.831
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.842
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.831
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.842
▶ F1 Score: 0.829
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.833
▶ F1 Score: 0.833
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.841
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.226
▶ Accuracy: 0.742
▶ F1 Score: 0.749
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.841
▶ F1 Score: 0.840
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.226
▶ Accuracy: 0.742
▶ F1 Score: 0.749
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.855
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.226
▶ Accuracy: 0.742
▶ F1 Score: 0.749
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.812
▶ F1 Score: 0.813
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.812
▶ F1 Score: 0.813
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.812
▶ F1 Score: 0.813
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.854
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.854
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.854
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.858
▶ F1 Score: 0.858
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.890
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  73%|███████▎  | 394/540 [144:37:40<73:04:54, 1802.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  73%|███████▎  | 395/540 [145:07:48<72:39:17, 1803.84s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  73%|███████▎  | 396/540 [145:38:39<72:42:40, 1817.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▎  | 397/540 [146:06:16<70:17:43, 1769.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▎  | 398/540 [146:06:42<49:10:26, 1246.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▍  | 399/540 [146:34:56<54:04:26, 1380.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▍  | 400/540 [146:35:31<38:00:05, 977.18s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▍  | 401/540 [147:04:25<46:29:36, 1204.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  74%|███████▍  | 402/540 [147:05:01<32:43:27, 853.68s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  75%|███████▍  | 403/540 [147:32:42<41:42:08, 1095.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  75%|███████▍  | 404/540 [148:03:45<50:05:32, 1325.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  75%|███████▌  | 405/540 [148:30:16<52:42:18, 1405.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  75%|███████▌  | 406/540 [149:01:26<57:30:25, 1544.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  75%|███████▌  | 407/540 [149:27:03<56:59:04, 1542.44s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▌  | 408/540 [149:59:00<60:40:43, 1654.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▌  | 409/540 [150:52:04<76:54:22, 2113.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▌  | 410/540 [150:53:07<54:06:42, 1498.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▌  | 411/540 [151:46:41<72:08:15, 2013.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▋  | 412/540 [151:47:48<50:48:47, 1429.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  76%|███████▋  | 413/540 [152:40:18<68:38:00, 1945.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  77%|███████▋  | 414/540 [152:41:17<48:17:01, 1379.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  77%|███████▋  | 415/540 [153:09:08<50:56:18, 1467.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  77%|███████▋  | 416/540 [154:22:04<80:35:33, 2339.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  77%|███████▋  | 417/540 [154:50:30<73:26:24, 2149.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  77%|███████▋  | 418/540 [156:03:48<95:42:17, 2824.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  78%|███████▊  | 419/540 [156:32:06<83:34:18, 2486.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  78%|███████▊  | 420/540 [157:45:24<101:59:34, 3059.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  78%|███████▊  | 421/540 [158:00:28<79:45:53, 2413.05s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  78%|███████▊  | 422/540 [158:07:04<59:15:29, 1807.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  78%|███████▊  | 423/540 [158:21:35<49:37:39, 1527.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▊  | 424/540 [158:28:04<38:11:36, 1185.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▊  | 425/540 [158:42:32<34:49:40, 1090.27s/it]✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.858
▶ F1 Score: 0.858
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.894
▶ F1 Score: 0.890
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.858
▶ F1 Score: 0.858
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.851
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.851
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.851
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.903
▶ F1 Score: 0.899
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.903
▶ F1 Score: 0.899
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.903
▶ F1 Score: 0.899
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.597
▶ Accuracy: 0.856
▶ F1 Score: 0.849
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.848
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.848
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.848
▶ F1 Score: 0.845
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.890
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.818
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.890
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.818
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.890
▶ F1 Score: 0.887
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.0001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.818
▶ F1 Score: 0.805
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.823
▶ F1 Score: 0.818
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.823
▶ F1 Score: 0.818
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.823
▶ F1 Score: 0.818
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▉  | 426/540 [158:49:04<27:53:43, 880.91s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▉  | 427/540 [158:58:41<24:46:53, 789.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▉  | 428/540 [159:13:42<25:36:24, 823.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  79%|███████▉  | 429/540 [159:22:37<22:42:30, 736.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  80%|███████▉  | 430/540 [159:38:35<24:32:13, 803.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  80%|███████▉  | 431/540 [159:47:44<22:00:35, 726.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  80%|████████  | 432/540 [160:02:29<23:13:34, 774.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  80%|████████  | 433/540 [160:25:54<28:38:27, 963.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  80%|████████  | 434/540 [160:40:54<27:48:43, 944.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████  | 435/540 [161:05:15<32:04:06, 1099.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████  | 436/540 [161:20:31<30:10:23, 1044.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████  | 437/540 [161:43:54<32:57:27, 1151.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████  | 438/540 [161:59:19<30:42:28, 1083.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████▏ | 439/540 [162:17:05<30:15:34, 1078.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  81%|████████▏ | 440/540 [162:32:56<28:53:43, 1040.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  82%|████████▏ | 441/540 [162:50:22<28:39:16, 1041.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  82%|████████▏ | 442/540 [163:06:24<27:42:38, 1017.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  82%|████████▏ | 443/540 [163:24:05<27:46:47, 1031.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  82%|████████▏ | 444/540 [163:39:37<26:41:56, 1001.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  82%|████████▏ | 445/540 [164:16:40<36:05:37, 1367.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  83%|████████▎ | 446/540 [164:39:57<35:56:38, 1376.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  83%|████████▎ | 447/540 [165:17:12<42:12:51, 1634.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  83%|████████▎ | 448/540 [165:40:43<40:03:00, 1567.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  83%|████████▎ | 449/540 [166:17:20<44:23:19, 1756.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  83%|████████▎ | 450/540 [166:40:15<41:02:42, 1641.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▎ | 451/540 [166:54:52<34:54:46, 1412.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▎ | 452/540 [167:29:40<39:28:46, 1615.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▍ | 453/540 [167:44:29<33:45:49, 1397.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▍ | 454/540 [168:19:12<38:17:25, 1602.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▍ | 455/540 [168:33:38<32:37:28, 1381.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  84%|████████▍ | 456/540 [169:07:30<36:47:47, 1577.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  85%|████████▍ | 457/540 [169:37:40<37:58:14, 1646.92s/it]✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.727
▶ F1 Score: 0.741
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.828
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.828
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.831
▶ F1 Score: 0.831
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.828
▶ F1 Score: 0.817
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.516
▶ Accuracy: 0.830
▶ F1 Score: 0.830
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.843
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.843
▶ F1 Score: 0.836
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.852
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.820
▶ F1 Score: 0.818
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.820
▶ F1 Score: 0.818
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.820
▶ F1 Score: 0.818
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.846
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.846
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.846
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.746
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.871
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.848
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.871
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.848
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.871
▶ F1 Score: 0.869
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.848
▶ F1 Score: 0.842
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.850
▶ F1 Score: 0.843
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  85%|████████▍ | 458/540 [169:38:16<26:30:09, 1163.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  85%|████████▌ | 459/540 [170:09:15<30:52:35, 1372.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  85%|████████▌ | 460/540 [170:09:52<21:35:25, 971.56s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  85%|████████▌ | 461/540 [170:40:39<27:05:13, 1234.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▌ | 462/540 [170:41:15<18:57:16, 874.83s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▌ | 463/540 [171:08:49<23:42:46, 1108.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▌ | 464/540 [171:44:54<30:05:40, 1425.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▌ | 465/540 [172:11:03<30:35:34, 1468.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▋ | 466/540 [172:47:04<34:27:13, 1676.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  86%|████████▋ | 467/540 [173:13:23<33:23:56, 1647.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  87%|████████▋ | 468/540 [173:48:06<35:33:23, 1777.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  87%|████████▋ | 469/540 [174:23:34<37:08:00, 1882.82s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  87%|████████▋ | 470/540 [174:24:30<25:57:14, 1334.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  87%|████████▋ | 471/540 [174:59:38<30:01:55, 1566.89s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  87%|████████▋ | 472/540 [175:00:45<21:05:46, 1116.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  88%|████████▊ | 473/540 [175:35:01<26:01:52, 1398.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  88%|████████▊ | 474/540 [175:36:07<18:18:46, 998.88s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  88%|████████▊ | 475/540 [176:09:51<23:35:14, 1306.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  88%|████████▊ | 476/540 [177:15:08<37:08:50, 2089.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  88%|████████▊ | 477/540 [177:49:10<36:18:59, 2075.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▊ | 478/540 [178:53:16<44:53:15, 2606.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▊ | 479/540 [179:26:32<41:03:47, 2423.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▉ | 480/540 [180:29:30<47:09:46, 2829.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▉ | 481/540 [180:41:16<35:55:59, 2192.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▉ | 482/540 [180:47:51<26:38:06, 1653.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  89%|████████▉ | 483/540 [180:59:17<21:35:10, 1363.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  90%|████████▉ | 484/540 [181:05:18<16:31:41, 1062.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  90%|████████▉ | 485/540 [181:17:07<14:36:38, 956.35s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  90%|█████████ | 486/540 [181:23:16<11:42:17, 780.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  90%|█████████ | 487/540 [181:32:06<10:22:47, 705.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  90%|█████████ | 488/540 [181:42:16<9:46:28, 676.70s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████ | 489/540 [181:51:16<9:00:21, 635.73s/it]✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.850
▶ F1 Score: 0.843
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.850
▶ F1 Score: 0.843
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.885
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.809
▶ F1 Score: 0.795
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.885
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.809
▶ F1 Score: 0.795
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.885
▶ F1 Score: 0.883
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.809
▶ F1 Score: 0.795
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.829
▶ F1 Score: 0.822
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.829
▶ F1 Score: 0.822
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.829
▶ F1 Score: 0.822
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.872
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.872
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.001, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.872
▶ F1 Score: 0.865
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.807
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.726
▶ F1 Score: 0.740
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.807
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.726
▶ F1 Score: 0.740
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.807
▶ F1 Score: 0.807
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.726
▶ F1 Score: 0.740
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.846
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.769
▶ F1 Score: 0.759
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.846
▶ F1 Score: 0.844
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████ | 490/540 [182:01:15<8:40:26, 624.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████ | 491/540 [182:10:13<8:08:48, 598.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████ | 492/540 [182:20:35<8:04:30, 605.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████▏| 493/540 [182:42:54<10:46:40, 825.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  91%|█████████▏| 494/540 [182:58:02<10:52:04, 850.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  92%|█████████▏| 495/540 [183:20:25<12:28:41, 998.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  92%|█████████▏| 496/540 [183:34:35<11:39:20, 953.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  92%|█████████▏| 497/540 [183:56:50<12:45:29, 1068.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  92%|█████████▏| 498/540 [184:11:24<11:46:48, 1009.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  92%|█████████▏| 499/540 [184:20:11<9:51:11, 865.16s/it]  /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  93%|█████████▎| 500/540 [184:35:27<9:46:49, 880.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  93%|█████████▎| 501/540 [184:43:27<8:14:03, 760.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  93%|█████████▎| 502/540 [184:59:28<8:39:35, 820.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  93%|█████████▎| 503/540 [185:07:50<7:27:04, 724.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  93%|█████████▎| 504/540 [185:23:31<7:53:56, 789.90s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▎| 505/540 [186:04:34<12:33:26, 1291.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▎| 506/540 [186:27:25<12:25:32, 1315.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▍| 507/540 [187:07:30<15:03:15, 1642.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▍| 508/540 [187:30:33<13:54:21, 1564.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.
  warnings.warn(
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▍| 509/540 [188:08:57<15:22:55, 1786.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  94%|█████████▍| 510/540 [188:31:48<13:50:55, 1661.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  95%|█████████▍| 511/540 [188:41:11<10:43:50, 1332.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  95%|█████████▍| 512/540 [189:07:51<10:59:11, 1412.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  95%|█████████▌| 513/540 [189:17:02<8:39:21, 1154.13s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  95%|█████████▌| 514/540 [189:43:32<9:16:43, 1284.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  95%|█████████▌| 515/540 [189:52:45<7:23:54, 1065.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▌| 516/540 [190:19:22<8:09:52, 1224.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▌| 517/540 [190:52:46<9:19:04, 1458.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▌| 518/540 [190:53:19<6:17:59, 1030.90s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▌| 519/540 [191:26:58<7:44:32, 1327.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▋| 520/540 [191:27:34<5:13:21, 940.07s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  96%|█████████▋| 521/540 [191:59:44<6:31:42, 1237.00s/it]✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.769
▶ F1 Score: 0.759
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.846
▶ F1 Score: 0.844
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64,), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.769
▶ F1 Score: 0.759
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.834
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.834
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.834
▶ F1 Score: 0.826
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.210
▶ Accuracy: 0.744
▶ F1 Score: 0.751
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.829
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.829
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.860
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.829
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.854
▶ F1 Score: 0.848
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.745
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.854
▶ F1 Score: 0.848
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.745
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.846
▶ F1 Score: 0.841
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.274
▶ Accuracy: 0.745
▶ F1 Score: 0.758
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.841
▶ F1 Score: 0.835
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.841
▶ F1 Score: 0.835
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.841
▶ F1 Score: 0.835
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.851
▶ F1 Score: 0.847
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.851
▶ F1 Score: 0.847
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.851
▶ F1 Score: 0.847
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  97%|█████████▋| 522/540 [192:00:21<4:23:03, 876.89s/it] /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  97%|█████████▋| 523/540 [192:20:02<4:34:18, 968.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  97%|█████████▋| 524/540 [192:52:26<5:36:15, 1260.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  97%|█████████▋| 525/540 [193:11:20<5:05:41, 1222.80s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  97%|█████████▋| 526/540 [193:45:00<5:41:09, 1462.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  98%|█████████▊| 527/540 [194:05:19<5:00:58, 1389.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  98%|█████████▊| 528/540 [194:39:37<5:17:56, 1589.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  98%|█████████▊| 529/540 [195:23:17<5:48:06, 1898.74s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  98%|█████████▊| 530/540 [195:24:24<3:44:52, 1349.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  98%|█████████▊| 531/540 [196:09:55<4:24:34, 1763.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▊| 532/540 [196:11:01<2:47:16, 1254.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▊| 533/540 [196:55:29<3:15:50, 1678.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▉| 534/540 [196:56:34<1:59:27, 1194.61s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▉| 535/540 [197:17:31<1:41:06, 1213.26s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▉| 536/540 [198:27:31<2:20:36, 2109.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp:  99%|█████████▉| 537/540 [198:48:22<1:32:35, 1851.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp: 100%|█████████▉| 538/540 [199:57:58<1:24:58, 2549.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp: 100%|█████████▉| 539/540 [200:20:59<36:38, 2198.45s/it]  /home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning mlp: 100%|██████████| 540/540 [201:34:42<00:00, 2865.81s/it]Tuning mlp: 100%|██████████| 540/540 [201:34:42<00:00, 1343.86s/it]
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.113
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.862
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.861
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.862
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.861
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.862
▶ F1 Score: 0.851
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (128, 64, 32), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.861
▶ F1 Score: 0.854
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.835
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.835
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.835
▶ F1 Score: 0.828
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.177
▶ Accuracy: 0.469
▶ F1 Score: 0.639
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.875
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 10000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.862
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.875
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 5000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.862
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.875
▶ F1 Score: 0.873
✅ Model: mlp, Params: {'activation': 'logistic', 'alpha': 0.01, 'hidden_layer_sizes': (256, 128, 64), 'learning_rate_init': 0.001, 'max_iter': 1000, 'random_state': 42, 'solver': 'sgd'}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.865
▶ F1 Score: 0.862
▶ Best mlp Top-3 Accuracy: 0.790 with Params: {'activation': 'tanh', 'alpha': 0.0001, 'hidden_layer_sizes': (128, 64), 'learning_rate_init': 0.0001, 'max_iter': 1000, 'random_state': 42, 'solver': 'adam'}
Tuning xgb:   0%|          | 0/540 [00:00<?, ?it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   0%|          | 1/540 [00:00<03:44,  2.40it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   0%|          | 2/540 [00:00<03:39,  2.45it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|          | 3/540 [00:01<03:54,  2.29it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|          | 4/540 [00:02<05:10,  1.72it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|          | 5/540 [00:03<06:51,  1.30it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|          | 6/540 [00:03<06:45,  1.32it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|▏         | 7/540 [00:05<09:09,  1.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   1%|▏         | 8/540 [00:07<10:39,  1.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   2%|▏         | 9/540 [00:08<11:30,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   2%|▏         | 10/540 [00:11<15:30,  1.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   2%|▏         | 11/540 [00:14<19:02,  2.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   2%|▏         | 12/540 [00:17<20:26,  2.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   2%|▏         | 13/540 [00:17<15:24,  1.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   3%|▎         | 14/540 [00:18<12:17,  1.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   3%|▎         | 15/540 [00:18<09:48,  1.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   3%|▎         | 16/540 [00:19<09:47,  1.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   3%|▎         | 17/540 [00:20<09:59,  1.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   3%|▎         | 18/540 [00:21<09:32,  1.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▎         | 19/540 [00:23<11:38,  1.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▎         | 20/540 [00:25<13:18,  1.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▍         | 21/540 [00:27<14:28,  1.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▍         | 22/540 [00:31<19:57,  2.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▍         | 23/540 [00:35<23:12,  2.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   4%|▍         | 24/540 [00:38<25:49,  3.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   5%|▍         | 25/540 [00:39<19:29,  2.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   5%|▍         | 26/540 [00:40<15:38,  1.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   5%|▌         | 27/540 [00:40<12:34,  1.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   5%|▌         | 28/540 [00:42<12:06,  1.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   5%|▌         | 29/540 [00:43<12:05,  1.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▌         | 30/540 [00:44<11:41,  1.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▌         | 31/540 [00:47<14:38,  1.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▌         | 32/540 [00:50<16:36,  1.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▌         | 33/540 [00:52<17:58,  2.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▋         | 34/540 [00:57<24:59,  2.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   6%|▋         | 35/540 [01:02<29:59,  3.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   7%|▋         | 36/540 [01:07<33:29,  3.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   7%|▋         | 37/540 [01:07<24:57,  2.98s/it]✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.785
▶ F1 Score: 0.794
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.781
▶ F1 Score: 0.790
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.778
▶ F1 Score: 0.787
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.792
▶ F1 Score: 0.799
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.794
▶ F1 Score: 0.801
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.792
▶ F1 Score: 0.798
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.801
▶ F1 Score: 0.804
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.803
▶ F1 Score: 0.806
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.419
▶ Accuracy: 0.803
▶ F1 Score: 0.806
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.806
▶ F1 Score: 0.808
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.807
▶ F1 Score: 0.810
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.807
▶ F1 Score: 0.810
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.866
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.864
▶ F1 Score: 0.865
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.865
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.868
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.869
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.867
▶ F1 Score: 0.863
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.871
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.863
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.863
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.871
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.870
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.876
▶ F1 Score: 0.875
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.874
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.875
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.879
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.879
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.891
▶ F1 Score: 0.888
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.882
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.897
▶ F1 Score: 0.894
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.893
▶ F1 Score: 0.889
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.886
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.886
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.884
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.879
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.878
▶ F1 Score: 0.878/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   7%|▋         | 38/540 [01:08<19:09,  2.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   7%|▋         | 39/540 [01:09<16:16,  1.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   7%|▋         | 40/540 [01:11<14:55,  1.79s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   8%|▊         | 41/540 [01:12<14:13,  1.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   8%|▊         | 42/540 [01:14<13:22,  1.61s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   8%|▊         | 43/540 [01:16<15:56,  1.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   8%|▊         | 44/540 [01:19<18:00,  2.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   8%|▊         | 45/540 [01:22<19:51,  2.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▊         | 46/540 [01:27<27:21,  3.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▊         | 47/540 [01:33<32:42,  3.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▉         | 48/540 [01:39<37:32,  4.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▉         | 49/540 [01:40<27:59,  3.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▉         | 50/540 [01:41<21:39,  2.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:   9%|▉         | 51/540 [01:41<16:51,  2.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  10%|▉         | 52/540 [01:43<15:36,  1.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  10%|▉         | 53/540 [01:44<14:54,  1.84s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  10%|█         | 54/540 [01:46<14:16,  1.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  10%|█         | 55/540 [01:49<17:16,  2.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  10%|█         | 56/540 [01:52<19:35,  2.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█         | 57/540 [01:55<21:38,  2.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█         | 58/540 [02:02<30:09,  3.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█         | 59/540 [02:08<35:57,  4.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█         | 60/540 [02:14<39:45,  4.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█▏        | 61/540 [02:14<28:37,  3.59s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  11%|█▏        | 62/540 [02:15<20:54,  2.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  12%|█▏        | 63/540 [02:15<15:27,  1.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  12%|█▏        | 64/540 [02:16<12:35,  1.59s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  12%|█▏        | 65/540 [02:17<10:33,  1.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  12%|█▏        | 66/540 [02:17<09:07,  1.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  12%|█▏        | 67/540 [02:19<09:44,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  13%|█▎        | 68/540 [02:21<11:04,  1.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  13%|█▎        | 69/540 [02:22<10:40,  1.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  13%|█▎        | 70/540 [02:24<13:09,  1.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  13%|█▎        | 71/540 [02:27<15:24,  1.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  13%|█▎        | 72/540 [02:29<16:33,  2.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▎        | 73/540 [02:30<12:42,  1.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▎        | 74/540 [02:30<10:04,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▍        | 75/540 [02:31<08:25,  1.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▍        | 76/540 [02:32<08:09,  1.06s/it]
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.878
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.882
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.895
▶ F1 Score: 0.892
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.896
▶ F1 Score: 0.892
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.897
▶ F1 Score: 0.894
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.896
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.885
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.897
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.895
▶ F1 Score: 0.892
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.876
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.877
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.874
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.895
▶ F1 Score: 0.892
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.896
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.897
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.896
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.897
▶ F1 Score: 0.894
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.897
▶ F1 Score: 0.894
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.898
▶ F1 Score: 0.895
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.897
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.798
▶ F1 Score: 0.798
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.802
▶ F1 Score: 0.803
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.804
▶ F1 Score: 0.806
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.828
▶ F1 Score: 0.825
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.500
▶ Accuracy: 0.828
▶ F1 Score: 0.825
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.484
▶ Accuracy: 0.825
▶ F1 Score: 0.821
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.613
▶ Accuracy: 0.857
▶ F1 Score: 0.855
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.855
▶ F1 Score: 0.852
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.858
▶ F1 Score: 0.854
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.865
▶ F1 Score: 0.861
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.661
▶ Accuracy: 0.867
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.867
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.872
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.876
▶ F1 Score: 0.870
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.873
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.863
▶ F1 Score: 0.860
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▍        | 77/540 [02:33<08:19,  1.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  14%|█▍        | 78/540 [02:34<08:02,  1.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  15%|█▍        | 79/540 [02:36<09:29,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  15%|█▍        | 80/540 [02:38<10:57,  1.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  15%|█▌        | 81/540 [02:39<11:47,  1.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  15%|█▌        | 82/540 [02:43<15:27,  2.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  15%|█▌        | 83/540 [02:46<18:16,  2.40s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▌        | 84/540 [02:49<19:27,  2.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▌        | 85/540 [02:49<14:54,  1.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▌        | 86/540 [02:50<12:05,  1.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▌        | 87/540 [02:51<09:51,  1.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▋        | 88/540 [02:52<09:58,  1.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  16%|█▋        | 89/540 [02:53<09:55,  1.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  17%|█▋        | 90/540 [02:55<09:49,  1.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  17%|█▋        | 91/540 [02:58<13:20,  1.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  17%|█▋        | 92/540 [03:00<14:32,  1.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  17%|█▋        | 93/540 [03:02<15:20,  2.06s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  17%|█▋        | 94/540 [03:07<20:29,  2.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  18%|█▊        | 95/540 [03:11<24:13,  3.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  18%|█▊        | 96/540 [03:15<26:09,  3.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  18%|█▊        | 97/540 [03:16<19:45,  2.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  18%|█▊        | 98/540 [03:17<15:14,  2.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  18%|█▊        | 99/540 [03:17<12:04,  1.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▊        | 100/540 [03:19<11:34,  1.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▊        | 101/540 [03:20<11:21,  1.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▉        | 102/540 [03:22<11:38,  1.59s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▉        | 103/540 [03:24<13:55,  1.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▉        | 104/540 [03:27<15:27,  2.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  19%|█▉        | 105/540 [03:30<17:04,  2.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  20%|█▉        | 106/540 [03:35<23:05,  3.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  20%|█▉        | 107/540 [03:40<27:05,  3.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  20%|██        | 108/540 [03:45<29:35,  4.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  20%|██        | 109/540 [03:46<22:22,  3.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  20%|██        | 110/540 [03:47<17:05,  2.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██        | 111/540 [03:47<13:41,  1.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██        | 112/540 [03:49<12:41,  1.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██        | 113/540 [03:51<12:53,  1.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██        | 114/540 [03:52<12:19,  1.73s/it]✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.862
▶ F1 Score: 0.858
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.863
▶ F1 Score: 0.859
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.867
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.883
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.870
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.882
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.880
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.884
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.885
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.880
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.844
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.899
▶ F1 Score: 0.895
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.857
▶ F1 Score: 0.845
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.885
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.858
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.857
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.850
▶ F1 Score: 0.838
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.863
▶ F1 Score: 0.849
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.861
▶ F1 Score: 0.847
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.883
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.883
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.883
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.845
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.845
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.885
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.842
▶ F1 Score: 0.829
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.847
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.848
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.848
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.884
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.897
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.884
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.887
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.886
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.885
▶ F1 Score: 0.882
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██▏       | 115/540 [03:55<14:50,  2.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  21%|██▏       | 116/540 [03:58<17:07,  2.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  22%|██▏       | 117/540 [04:02<18:41,  2.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  22%|██▏       | 118/540 [04:08<25:27,  3.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  22%|██▏       | 119/540 [04:14<30:33,  4.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  22%|██▏       | 120/540 [04:19<33:37,  4.80s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  22%|██▏       | 121/540 [04:20<24:18,  3.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  23%|██▎       | 122/540 [04:20<17:47,  2.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  23%|██▎       | 123/540 [04:21<13:06,  1.89s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  23%|██▎       | 124/540 [04:21<10:49,  1.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  23%|██▎       | 125/540 [04:22<08:57,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  23%|██▎       | 126/540 [04:23<07:36,  1.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▎       | 127/540 [04:24<08:03,  1.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▎       | 128/540 [04:25<08:33,  1.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▍       | 129/540 [04:27<08:30,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▍       | 130/540 [04:29<11:11,  1.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▍       | 131/540 [04:32<13:11,  1.94s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  24%|██▍       | 132/540 [04:34<14:16,  2.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  25%|██▍       | 133/540 [04:35<10:53,  1.61s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  25%|██▍       | 134/540 [04:35<08:24,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  25%|██▌       | 135/540 [04:36<06:37,  1.02it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  25%|██▌       | 136/540 [04:36<06:20,  1.06it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  25%|██▌       | 137/540 [04:38<06:51,  1.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▌       | 138/540 [04:38<06:30,  1.03it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▌       | 139/540 [04:40<08:11,  1.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▌       | 140/540 [04:42<09:02,  1.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▌       | 141/540 [04:44<09:30,  1.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▋       | 142/540 [04:47<12:50,  1.94s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  26%|██▋       | 143/540 [04:50<15:09,  2.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  27%|██▋       | 144/540 [04:53<16:54,  2.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  27%|██▋       | 145/540 [04:54<12:49,  1.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  27%|██▋       | 146/540 [04:54<10:01,  1.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  27%|██▋       | 147/540 [04:55<08:01,  1.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  27%|██▋       | 148/540 [04:56<07:50,  1.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  28%|██▊       | 149/540 [04:57<08:01,  1.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  28%|██▊       | 150/540 [04:58<07:48,  1.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  28%|██▊       | 151/540 [05:00<09:49,  1.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  28%|██▊       | 152/540 [05:03<11:23,  1.76s/it]✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.845
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.844
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.843
▶ F1 Score: 0.831
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.848
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.848
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.848
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.852
▶ F1 Score: 0.851
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.853
▶ F1 Score: 0.852
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.869
▶ F1 Score: 0.868
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.879
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.878
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.884
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.888
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.903
▶ F1 Score: 0.899
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.888
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.905
▶ F1 Score: 0.901
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.891
▶ F1 Score: 0.887
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.888
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.883
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.895
▶ F1 Score: 0.893
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.903
▶ F1 Score: 0.899
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.905
▶ F1 Score: 0.901
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.902
▶ F1 Score: 0.897
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.863
▶ F1 Score: 0.850
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.865
▶ F1 Score: 0.852
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.864
▶ F1 Score: 0.851
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.864
▶ F1 Score: 0.850
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.862
▶ F1 Score: 0.848
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.908
▶ F1 Score: 0.904
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.902
▶ F1 Score: 0.897
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.907
▶ F1 Score: 0.903
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.899
▶ F1 Score: 0.894
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.843
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.832
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  28%|██▊       | 153/540 [05:05<12:05,  1.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▊       | 154/540 [05:09<17:09,  2.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▊       | 155/540 [05:14<20:07,  3.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▉       | 156/540 [05:18<22:21,  3.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▉       | 157/540 [05:19<16:41,  2.62s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▉       | 158/540 [05:19<12:49,  2.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  29%|██▉       | 159/540 [05:20<10:14,  1.61s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  30%|██▉       | 160/540 [05:21<10:01,  1.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  30%|██▉       | 161/540 [05:23<09:29,  1.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  30%|███       | 162/540 [05:24<09:07,  1.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  30%|███       | 163/540 [05:27<11:10,  1.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  30%|███       | 164/540 [05:29<12:39,  2.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███       | 165/540 [05:32<13:42,  2.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███       | 166/540 [05:37<19:09,  3.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███       | 167/540 [05:42<22:48,  3.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███       | 168/540 [05:47<24:59,  4.03s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███▏      | 169/540 [05:47<18:39,  3.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  31%|███▏      | 170/540 [05:48<14:21,  2.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  32%|███▏      | 171/540 [05:49<11:24,  1.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  32%|███▏      | 172/540 [05:50<10:56,  1.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  32%|███▏      | 173/540 [05:52<10:21,  1.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  32%|███▏      | 174/540 [05:54<10:11,  1.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  32%|███▏      | 175/540 [05:56<12:08,  1.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  33%|███▎      | 176/540 [05:59<13:20,  2.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  33%|███▎      | 177/540 [06:02<14:27,  2.39s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  33%|███▎      | 178/540 [06:07<19:43,  3.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  33%|███▎      | 179/540 [06:13<23:40,  3.93s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  33%|███▎      | 180/540 [06:18<25:51,  4.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▎      | 181/540 [06:18<18:43,  3.13s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▎      | 182/540 [06:19<13:46,  2.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▍      | 183/540 [06:19<10:16,  1.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▍      | 184/540 [06:20<08:45,  1.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▍      | 185/540 [06:21<07:40,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  34%|███▍      | 186/540 [06:22<07:55,  1.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  35%|███▍      | 187/540 [06:24<08:43,  1.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  35%|███▍      | 188/540 [06:26<08:49,  1.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  35%|███▌      | 189/540 [06:27<08:45,  1.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  35%|███▌      | 190/540 [06:31<12:11,  2.09s/it]✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.843
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.860
▶ F1 Score: 0.845
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.843
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.903
▶ F1 Score: 0.898
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.891
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.849
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.856
▶ F1 Score: 0.842
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.845
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.856
▶ F1 Score: 0.842
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.845
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.857
▶ F1 Score: 0.842
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.843
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.888
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.842
▶ F1 Score: 0.828
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.848
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.843
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.845
▶ F1 Score: 0.831
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.860
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.859
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.845
▶ F1 Score: 0.831
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.858
▶ F1 Score: 0.844
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.860
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.779
▶ F1 Score: 0.784
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.782
▶ F1 Score: 0.787
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.581
▶ Accuracy: 0.782
▶ F1 Score: 0.787
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.787
▶ F1 Score: 0.790
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.785
▶ F1 Score: 0.788
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.785
▶ F1 Score: 0.788
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.468
▶ Accuracy: 0.793
▶ F1 Score: 0.793
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.794
▶ F1 Score: 0.791
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.791
▶ F1 Score: 0.791
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.796
▶ F1 Score: 0.795
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  35%|███▌      | 191/540 [06:33<13:22,  2.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▌      | 192/540 [06:36<14:26,  2.49s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▌      | 193/540 [06:37<11:00,  1.90s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▌      | 194/540 [06:37<08:32,  1.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▌      | 195/540 [06:38<06:50,  1.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▋      | 196/540 [06:39<06:42,  1.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  36%|███▋      | 197/540 [06:40<06:37,  1.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  37%|███▋      | 198/540 [06:41<06:52,  1.21s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  37%|███▋      | 199/540 [06:43<08:25,  1.48s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  37%|███▋      | 200/540 [06:45<09:13,  1.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  37%|███▋      | 201/540 [06:47<09:53,  1.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  37%|███▋      | 202/540 [06:52<13:42,  2.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  38%|███▊      | 203/540 [06:56<16:25,  2.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  38%|███▊      | 204/540 [06:59<17:52,  3.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  38%|███▊      | 205/540 [07:00<13:35,  2.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  38%|███▊      | 206/540 [07:01<10:42,  1.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  38%|███▊      | 207/540 [07:02<08:44,  1.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▊      | 208/540 [07:03<08:29,  1.54s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▊      | 209/540 [07:05<08:32,  1.55s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▉      | 210/540 [07:06<08:18,  1.51s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▉      | 211/540 [07:09<10:28,  1.91s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▉      | 212/540 [07:12<12:12,  2.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  39%|███▉      | 213/540 [07:15<13:21,  2.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  40%|███▉      | 214/540 [07:20<17:47,  3.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  40%|███▉      | 215/540 [07:26<21:39,  4.00s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  40%|████      | 216/540 [07:31<24:25,  4.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  40%|████      | 217/540 [07:32<18:39,  3.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  40%|████      | 218/540 [07:33<14:11,  2.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████      | 219/540 [07:34<11:07,  2.08s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████      | 220/540 [07:35<10:13,  1.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████      | 221/540 [07:37<09:56,  1.87s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████      | 222/540 [07:39<09:41,  1.83s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████▏     | 223/540 [07:42<11:46,  2.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  41%|████▏     | 224/540 [07:46<14:08,  2.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  42%|████▏     | 225/540 [07:49<14:48,  2.82s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  42%|████▏     | 226/540 [07:55<19:55,  3.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  42%|████▏     | 227/540 [08:02<24:02,  4.61s/it]✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.532
▶ Accuracy: 0.795
▶ F1 Score: 0.795
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.796
▶ F1 Score: 0.796
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.843
▶ F1 Score: 0.838
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.837
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.836
▶ F1 Score: 0.829
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.851
▶ F1 Score: 0.845
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.844
▶ F1 Score: 0.837
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.843
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.842
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.855
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.645
▶ Accuracy: 0.854
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.847
▶ F1 Score: 0.841
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.844
▶ F1 Score: 0.837
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.843
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.868
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.868
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.869
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.871
▶ F1 Score: 0.870
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.871
▶ F1 Score: 0.870
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.873
▶ F1 Score: 0.872
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.881
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.878
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.876
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.882
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.880
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.880
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.864
▶ F1 Score: 0.864
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.866
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.867
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.869
▶ F1 Score: 0.868
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.870
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.871
▶ F1 Score: 0.870
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.873
▶ F1 Score: 0.871
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.875
▶ F1 Score: 0.873
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.876
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.878
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.879
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.880
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  42%|████▏     | 228/540 [08:08<26:52,  5.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  42%|████▏     | 229/540 [08:09<19:57,  3.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  43%|████▎     | 230/540 [08:10<15:25,  2.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  43%|████▎     | 231/540 [08:11<12:02,  2.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  43%|████▎     | 232/540 [08:12<11:13,  2.19s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  43%|████▎     | 233/540 [08:14<10:43,  2.09s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  43%|████▎     | 234/540 [08:16<10:27,  2.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▎     | 235/540 [08:19<12:09,  2.39s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▎     | 236/540 [08:23<13:56,  2.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▍     | 237/540 [08:27<15:03,  2.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▍     | 238/540 [08:34<21:00,  4.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▍     | 239/540 [08:41<26:11,  5.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  44%|████▍     | 240/540 [08:48<28:45,  5.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  45%|████▍     | 241/540 [08:49<20:39,  4.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  45%|████▍     | 242/540 [08:49<14:58,  3.01s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  45%|████▌     | 243/540 [08:49<11:00,  2.23s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  45%|████▌     | 244/540 [08:50<08:55,  1.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  45%|████▌     | 245/540 [08:51<07:25,  1.51s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▌     | 246/540 [08:52<06:17,  1.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▌     | 247/540 [08:53<06:36,  1.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▌     | 248/540 [08:55<06:36,  1.36s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▌     | 249/540 [08:56<07:01,  1.45s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▋     | 250/540 [08:59<08:32,  1.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  46%|████▋     | 251/540 [09:01<09:48,  2.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  47%|████▋     | 252/540 [09:04<10:18,  2.15s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  47%|████▋     | 253/540 [09:04<07:50,  1.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  47%|████▋     | 254/540 [09:05<06:07,  1.29s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  47%|████▋     | 255/540 [09:05<05:05,  1.07s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  47%|████▋     | 256/540 [09:07<05:11,  1.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  48%|████▊     | 257/540 [09:07<05:00,  1.06s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  48%|████▊     | 258/540 [09:08<04:51,  1.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  48%|████▊     | 259/540 [09:10<05:49,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  48%|████▊     | 260/540 [09:12<06:50,  1.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  48%|████▊     | 261/540 [09:14<07:46,  1.67s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▊     | 262/540 [09:18<10:00,  2.16s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▊     | 263/540 [09:21<11:23,  2.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▉     | 264/540 [09:24<12:34,  2.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▉     | 265/540 [09:25<09:37,  2.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▉     | 266/540 [09:26<07:41,  1.69s/it]▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.866
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.866
▶ F1 Score: 0.866
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.868
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.866
▶ F1 Score: 0.865
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.868
▶ F1 Score: 0.867
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.869
▶ F1 Score: 0.868
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.875
▶ F1 Score: 0.873
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.872
▶ F1 Score: 0.870
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.873
▶ F1 Score: 0.871
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.877
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.001, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.877
▶ F1 Score: 0.875
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.801
▶ F1 Score: 0.799
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.792
▶ F1 Score: 0.791
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.629
▶ Accuracy: 0.795
▶ F1 Score: 0.795
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.806
▶ F1 Score: 0.804
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.807
▶ F1 Score: 0.805
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.806
▶ F1 Score: 0.805
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.565
▶ Accuracy: 0.834
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.835
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.548
▶ Accuracy: 0.832
▶ F1 Score: 0.830
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.854
▶ F1 Score: 0.854
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.855
▶ F1 Score: 0.854
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.855
▶ F1 Score: 0.854
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.849
▶ F1 Score: 0.843
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.846
▶ F1 Score: 0.840
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.843
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.866
▶ F1 Score: 0.863
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.859
▶ F1 Score: 0.855
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.864
▶ F1 Score: 0.861
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.872
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.872
▶ F1 Score: 0.869
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.874
▶ F1 Score: 0.871
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.887
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.885
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.881
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.879
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.876
▶ F1 Score: 0.874
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  49%|████▉     | 267/540 [09:26<06:15,  1.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  50%|████▉     | 268/540 [09:28<06:14,  1.38s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  50%|████▉     | 269/540 [09:29<06:23,  1.42s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  50%|█████     | 270/540 [09:31<06:33,  1.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  50%|█████     | 271/540 [09:33<07:50,  1.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  50%|█████     | 272/540 [09:36<08:48,  1.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████     | 273/540 [09:38<09:24,  2.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████     | 274/540 [09:43<12:45,  2.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████     | 275/540 [09:47<14:52,  3.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████     | 276/540 [09:52<16:31,  3.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████▏    | 277/540 [09:53<12:28,  2.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  51%|█████▏    | 278/540 [09:53<09:36,  2.20s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  52%|█████▏    | 279/540 [09:54<07:36,  1.75s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  52%|█████▏    | 280/540 [09:56<07:37,  1.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  52%|█████▏    | 281/540 [09:57<07:23,  1.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  52%|█████▏    | 282/540 [09:59<07:22,  1.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  52%|█████▏    | 283/540 [10:02<09:35,  2.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  53%|█████▎    | 284/540 [10:05<10:21,  2.43s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  53%|█████▎    | 285/540 [10:09<11:17,  2.66s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  53%|█████▎    | 286/540 [10:14<15:03,  3.56s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  53%|█████▎    | 287/540 [10:20<17:26,  4.14s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  53%|█████▎    | 288/540 [10:25<18:43,  4.46s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▎    | 289/540 [10:26<14:00,  3.35s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▎    | 290/540 [10:26<10:45,  2.58s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▍    | 291/540 [10:27<08:27,  2.04s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▍    | 292/540 [10:29<08:11,  1.98s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▍    | 293/540 [10:31<08:03,  1.96s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  54%|█████▍    | 294/540 [10:33<07:53,  1.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  55%|█████▍    | 295/540 [10:36<09:33,  2.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  55%|█████▍    | 296/540 [10:40<11:04,  2.72s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  55%|█████▌    | 297/540 [10:43<11:50,  2.92s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  55%|█████▌    | 298/540 [10:49<15:23,  3.82s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  55%|█████▌    | 299/540 [10:56<18:56,  4.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▌    | 300/540 [11:03<21:15,  5.31s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▌    | 301/540 [11:03<15:11,  3.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▌    | 302/540 [11:03<11:00,  2.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▌    | 303/540 [11:04<08:06,  2.05s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▋    | 304/540 [11:04<06:28,  1.65s/it]✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.880
▶ F1 Score: 0.878
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.879
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.882
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.882
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.887
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.882
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.884
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.886
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.890
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.878
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.879
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.726
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.883
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.879
▶ F1 Score: 0.875
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.880
▶ F1 Score: 0.876
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.885
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.886
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.884
▶ F1 Score: 0.879
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.849
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.694
▶ Accuracy: 0.880
▶ F1 Score: 0.877
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.677
▶ Accuracy: 0.877
▶ F1 Score: 0.874
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.878
▶ F1 Score: 0.875
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.885
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.884
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.710
▶ Accuracy: 0.885
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.887
▶ F1 Score: 0.882
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.888
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.01, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.849
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.852
▶ F1 Score: 0.849
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.758
▶ Accuracy: 0.856
▶ F1 Score: 0.854
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.742
▶ Accuracy: 0.852
▶ F1 Score: 0.851
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.882
▶ F1 Score: 0.880
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  56%|█████▋    | 305/540 [11:05<05:22,  1.37s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  57%|█████▋    | 306/540 [11:06<04:33,  1.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  57%|█████▋    | 307/540 [11:07<04:44,  1.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  57%|█████▋    | 308/540 [11:08<04:54,  1.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  57%|█████▋    | 309/540 [11:10<04:52,  1.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  57%|█████▋    | 310/540 [11:12<06:28,  1.69s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  58%|█████▊    | 311/540 [11:15<07:27,  1.95s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  58%|█████▊    | 312/540 [11:17<08:03,  2.12s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  58%|█████▊    | 313/540 [11:18<06:03,  1.60s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  58%|█████▊    | 314/540 [11:18<04:40,  1.24s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  58%|█████▊    | 315/540 [11:19<03:41,  1.02it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▊    | 316/540 [11:20<03:32,  1.05it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▊    | 317/540 [11:21<03:37,  1.03it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▉    | 318/540 [11:22<03:40,  1.01it/s]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▉    | 319/540 [11:24<04:46,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▉    | 320/540 [11:25<05:10,  1.41s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  59%|█████▉    | 321/540 [11:27<05:33,  1.52s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  60%|█████▉    | 322/540 [11:30<07:21,  2.02s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  60%|█████▉    | 323/540 [11:34<08:55,  2.47s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  60%|██████    | 324/540 [11:37<09:55,  2.76s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  60%|██████    | 325/540 [11:38<07:30,  2.10s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  60%|██████    | 326/540 [11:38<06:00,  1.68s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████    | 327/540 [11:39<04:44,  1.34s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████    | 328/540 [11:40<04:39,  1.32s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████    | 329/540 [11:41<04:27,  1.27s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████    | 330/540 [11:43<04:32,  1.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████▏   | 331/540 [11:45<05:40,  1.63s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  61%|██████▏   | 332/540 [11:48<06:26,  1.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  62%|██████▏   | 333/540 [11:50<06:52,  1.99s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  62%|██████▏   | 334/540 [11:55<09:39,  2.81s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  62%|██████▏   | 335/540 [11:59<11:22,  3.33s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  62%|██████▏   | 336/540 [12:04<12:35,  3.71s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  62%|██████▏   | 337/540 [12:04<09:23,  2.78s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  63%|██████▎   | 338/540 [12:05<07:28,  2.22s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  63%|██████▎   | 339/540 [12:06<05:48,  1.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  63%|██████▎   | 340/540 [12:07<05:29,  1.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  63%|██████▎   | 341/540 [12:09<05:28,  1.65s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  63%|██████▎   | 342/540 [12:10<05:11,  1.57s/it]✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.881
▶ F1 Score: 0.880
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.885
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.888
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.892
▶ F1 Score: 0.889
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.893
▶ F1 Score: 0.891
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.894
▶ F1 Score: 0.891
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.895
▶ F1 Score: 0.892
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.895
▶ F1 Score: 0.891
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.889
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.888
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.774
▶ Accuracy: 0.883
▶ F1 Score: 0.881
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.890
▶ F1 Score: 0.887
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.893
▶ F1 Score: 0.890
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.890
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.889
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.889
▶ F1 Score: 0.885
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.890
▶ F1 Score: 0.886
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.849
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.848
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 7, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.888
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.887
▶ F1 Score: 0.884
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.888
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.844
▶ F1 Score: 0.832
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.849
▶ F1 Score: 0.837
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.823
▶ Accuracy: 0.850
▶ F1 Score: 0.838
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.847
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.849
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.850
▶ F1 Score: 0.838
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.847
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.887
▶ F1 Score: 0.883
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.848
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.844
▶ F1 Score: 0.831
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▎   | 343/540 [12:13<06:10,  1.88s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▎   | 344/540 [12:16<07:06,  2.17s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▍   | 345/540 [12:18<07:25,  2.28s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▍   | 346/540 [12:24<10:17,  3.18s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▍   | 347/540 [12:29<12:24,  3.86s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  64%|██████▍   | 348/540 [12:34<13:44,  4.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  65%|██████▍   | 349/540 [12:35<10:21,  3.25s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  65%|██████▍   | 350/540 [12:36<07:54,  2.50s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  65%|██████▌   | 351/540 [12:37<06:12,  1.97s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  65%|██████▌   | 352/540 [12:38<05:47,  1.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  65%|██████▌   | 353/540 [12:40<05:45,  1.85s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▌   | 354/540 [12:42<05:29,  1.77s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▌   | 355/540 [12:45<06:30,  2.11s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▌   | 356/540 [12:48<07:45,  2.53s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▌   | 357/540 [12:51<08:19,  2.73s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▋   | 358/540 [12:57<11:03,  3.64s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  66%|██████▋   | 359/540 [13:03<12:57,  4.30s/it]/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/mlflow/types/utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(
Tuning xgb:  67%|██████▋   | 360/540 [13:09<14:18,  4.77s/it]Tuning xgb:  67%|██████▋   | 360/540 [13:09<06:34,  2.19s/it]
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.847
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.849
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.852
▶ F1 Score: 0.839
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 12, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.847
▶ F1 Score: 0.834
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.861
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 100, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.790
▶ Accuracy: 0.860
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.847
▶ F1 Score: 0.835
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.860
▶ F1 Score: 0.846
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 250, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.849
▶ F1 Score: 0.837
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.849
▶ F1 Score: 0.836
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 500, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.4}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.851
▶ F1 Score: 0.838
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.6}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.846
▶ F1 Score: 0.833
✅ Model: xgb, Params: {'colsample_bytree': 1.0, 'learning_rate': 0.1, 'max_depth': 15, 'n_estimators': 1000, 'random_state': 42, 'subsample': 0.8}
▶ Top-3 Accuracy: 0.806
▶ Accuracy: 0.861
▶ F1 Score: 0.848
Traceback (most recent call last):
  File "/home/dev/projects/dealmonitor_ml_clean/scripts/train_nn_model.py", line 7, in <module>
    train_nn_model(data_path="data/knn_training_set.parquet", model_path="models/nn_model.pkl")
  File "/home/dev/projects/dealmonitor_ml_clean/src/model_nn_v3.py", line 183, in train_nn_model
    clf = clone(model).set_params(**params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/sklearn.py", line 1683, in fit
    self._Booster = train(
                    ^^^^^^
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/training.py", line 183, in train
    bst.update(dtrain, iteration=i, fobj=obj)
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/core.py", line 2246, in update
    _check_call(
  File "/home/dev/projects/dealmonitor_ml_clean/.dealmonitor_ml_clean_venv/lib/python3.12/site-packages/xgboost/core.py", line 310, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: value 1.2 for Parameter colsample_bytree exceed bound [0,1]
colsample_bytree: Subsample ratio of columns, resample on each tree construction.
